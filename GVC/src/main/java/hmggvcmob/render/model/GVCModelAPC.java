// Date: 2014/08/27 10:24:34
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package hmggvcmob.render.model;

import handmadevehicle.entity.parts.ITank;
import handmadevehicle.entity.parts.logics.TankBaseLogicLogic;
import hmggvcmob.entity.guerrilla.GVCEntityAPC;
import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import org.lwjgl.opengl.GL11;

import static handmadeguns.event.RenderTickSmoothing.smooth;

public class GVCModelAPC extends ModelBase
{
    //fields
    ModelRenderer bodyL;
    ModelRenderer bodyR;
    ModelRenderer face1M;
    ModelRenderer face1M2;
    ModelRenderer face2;
    ModelRenderer bottom;
    ModelRenderer supL1;
    ModelRenderer supL2;
    ModelRenderer supL3;
    ModelRenderer supR1;
    ModelRenderer supR2;
    ModelRenderer suoR3;
    ModelRenderer catML;
    ModelRenderer cat_FL;
    ModelRenderer cat_FR;
    ModelRenderer cat_MR;
    ModelRenderer face1L1;
    ModelRenderer face1R1;
    ModelRenderer bodyL1;
    ModelRenderer bodyR1;
    ModelRenderer inside;
    ModelRenderer catLBT;
    ModelRenderer catLBM;
    ModelRenderer catLBB;
    ModelRenderer catRBT;
    ModelRenderer catRBM;
    ModelRenderer catRBB;
    ModelRenderer backL;
    ModelRenderer backR;
    ModelRenderer door;
    ModelRenderer box1;
    ModelRenderer box2;
    ModelRenderer box3;
    ModelRenderer box4;
    ModelRenderer box5;
    ModelRenderer box6;
    ModelRenderer squirt1;
    ModelRenderer squirt2;
    ModelRenderer hatch1;
    ModelRenderer hatch2;
    ModelRenderer hatch3;
    ModelRenderer hatch4;
    ModelRenderer top1;
    ModelRenderer top2;
    ModelRenderer top3;
    ModelRenderer top4;
    ModelRenderer topdoor;
    ModelRenderer hatchgun1;
    ModelRenderer hatchgun2;
    ModelRenderer hatchgun3;
    ModelRenderer hatchgun4;
    ModelRenderer hatchgun5;
    ModelRenderer hatchgun6;
    ModelRenderer Tom_body;
    ModelRenderer Tom_head;
    ModelRenderer Tom_armR;
    ModelRenderer Tom_armL;
    ModelRenderer LightL1;
    ModelRenderer LightR1;
    ModelRenderer LightR2;
    ModelRenderer LightL2;
    ModelRenderer LightRB;
    ModelRenderer LightLB;
    ModelRenderer skirtL;
    ModelRenderer skirtR;
    ModelRenderer extra_wheelLF;
    ModelRenderer extra_wheelRB;
    ModelRenderer extra_wheelLB;
    ModelRenderer extra_wheelRF;

    public GVCModelAPC()
    {
        textureWidth = 320;
        textureHeight = 320;

        bodyL = new ModelRenderer(this, 142, 16);
        bodyL.addBox(19.9F, -11F, -17F, 1, 18, 55);
        bodyL.setRotationPoint(0F, 0F, 0F);
        bodyL.setTextureSize(320, 320);
        bodyL.mirror = true;
        setRotation(bodyL, 0F, 0F, 0F);
        bodyR = new ModelRenderer(this, 143, 90);
        bodyR.addBox(-20.9F, -11F, -17F, 1, 18, 55);
        bodyR.setRotationPoint(0F, 0F, 0F);
        bodyR.setTextureSize(320, 320);
        bodyR.mirror = true;
        setRotation(bodyR, 0F, 0F, 0F);
        face1M = new ModelRenderer(this, 80, 113);
        face1M.addBox(-13F, 3.4F, -20.5F, 26, 24, 1);
        face1M.setRotationPoint(0F, 0F, 0F);
        face1M.setTextureSize(320, 320);
        face1M.mirror = true;
        setRotation(face1M, -0.7853982F, 0F, 0F);
        face1M2 = new ModelRenderer(this, 82, 95);
        face1M2.addBox(-13F, 10.6F, -21F, 13, 15, 1);
        face1M2.setRotationPoint(0F, 0F, 0F);
        face1M2.setTextureSize(320, 320);
        face1M2.mirror = true;
        setRotation(face1M2, -0.7853982F, 0F, 0F);
        face2 = new ModelRenderer(this, 83, 78);
        face2.addBox(-13F, -12.4F, -31.8F, 26, 12, 1);
        face2.setRotationPoint(0F, 0F, 0F);
        face2.setTextureSize(320, 320);
        face2.mirror = true;
        setRotation(face2, 0.5235988F, 0F, 0F);
        bottom = new ModelRenderer(this, 0, 0);
        bottom.addBox(-13F, 14.5F, -27.8F, 26, 1, 66);
        bottom.setRotationPoint(0F, 0F, 0F);
        bottom.setTextureSize(320, 320);
        bottom.mirror = true;
        setRotation(bottom, 0F, 0F, 0F);
        supL1 = new ModelRenderer(this, 30, 93);
        supL1.addBox(11F, -29.1F, -17.4F, 2, 1, 2);
        supL1.setRotationPoint(0F, 0F, 0F);
        supL1.setTextureSize(320, 320);
        supL1.mirror = true;
        setRotation(supL1, 1.308997F, 0F, 0F);
        supL2 = new ModelRenderer(this, 30, 97);
        supL2.addBox(11F, -8.4F, -32.8F, 2, 6, 1);
        supL2.setRotationPoint(0F, 0F, 0F);
        supL2.setTextureSize(320, 320);
        supL2.mirror = true;
        setRotation(supL2, 0.5235988F, 0F, 0F);
        supL3 = new ModelRenderer(this, 30, 105);
        supL3.addBox(11F, -24.8F, -21.6F, 2, 2, 1);
        supL3.setRotationPoint(0F, 0F, 0F);
        supL3.setTextureSize(320, 320);
        supL3.mirror = true;
        setRotation(supL3, 1.308997F, 0F, 0F);
        supR1 = new ModelRenderer(this, 39, 93);
        supR1.addBox(-13F, -29.1F, -17.4F, 2, 1, 2);
        supR1.setRotationPoint(0F, 0F, 0F);
        supR1.setTextureSize(320, 320);
        supR1.mirror = true;
        setRotation(supR1, 1.308997F, 0F, 0F);
        supR2 = new ModelRenderer(this, 38, 97);
        supR2.addBox(-13F, -8.4F, -32.8F, 2, 6, 1);
        supR2.setRotationPoint(0F, 0F, 0F);
        supR2.setTextureSize(320, 320);
        supR2.mirror = true;
        setRotation(supR2, 0.5235988F, 0F, 0F);
        suoR3 = new ModelRenderer(this, 38, 105);
        suoR3.addBox(-13F, -24.8F, -21.6F, 2, 2, 1);
        suoR3.setRotationPoint(0F, 0F, 0F);
        suoR3.setTextureSize(320, 320);
        suoR3.mirror = true;
        setRotation(suoR3, 1.308997F, 0F, 0F);
        catML = new ModelRenderer(this, 0, 79);
        catML.addBox(13F, 7F, -24F, 8, 16, 62);
        catML.setRotationPoint(0F, 0F, 0F);
        catML.setTextureSize(320, 320);
        catML.mirror = true;
        setRotation(catML, 0F, 0F, 0F);
        cat_FL = new ModelRenderer(this, 0, 114);
        cat_FL.addBox(12.9F, -9F, -32.3F, 8, 17, 8);
        cat_FL.setRotationPoint(0F, 0F, 0F);
        cat_FL.setTextureSize(320, 320);
        cat_FL.mirror = true;
        setRotation(cat_FL, 0.5235988F, 0F, 0F);
        cat_FR = new ModelRenderer(this, 0, 195);
        cat_FR.addBox(-20.9F, -9F, -32.3F, 8, 17, 8);
        cat_FR.setRotationPoint(0F, 0F, 0F);
        cat_FR.setTextureSize(320, 320);
        cat_FR.mirror = true;
        setRotation(cat_FR, 0.5235988F, 0F, 0F);
        cat_MR = new ModelRenderer(this, 0, 160);
        cat_MR.addBox(-21F, 7F, -24F, 8, 16, 62);
        cat_MR.setRotationPoint(0F, 0F, 0F);
        cat_MR.setTextureSize(320, 320);
        cat_MR.mirror = true;
        setRotation(cat_MR, 0F, 0F, 0F);
        face1L1 = new ModelRenderer(this, 213, 199);
        face1L1.addBox(13F, 3.4F, -20.5F, 8, 24, 8);
        face1L1.setRotationPoint(0F, 0F, 0F);
        face1L1.setTextureSize(320, 320);
        face1L1.mirror = true;
        setRotation(face1L1, -0.7853982F, 0F, 0F);
        face1R1 = new ModelRenderer(this, 246, 199);
        face1R1.addBox(-21F, 3.4F, -20.5F, 8, 24, 8);
        face1R1.setRotationPoint(0F, 0F, 0F);
        face1R1.setTextureSize(320, 320);
        face1R1.mirror = true;
        setRotation(face1R1, -0.7853982F, 0F, 0F);
        bodyL1 = new ModelRenderer(this, 81, 202);
        bodyL1.addBox(20.1F, -1F, -25F, 1, 8, 8);
        bodyL1.setRotationPoint(0F, 0F, 0F);
        bodyL1.setTextureSize(320, 320);
        bodyL1.mirror = true;
        setRotation(bodyL1, 0F, 0F, 0F);
        bodyR1 = new ModelRenderer(this, 81, 171);
        bodyR1.addBox(-21.1F, -1F, -25F, 1, 8, 8);
        bodyR1.setRotationPoint(0F, 0F, 0F);
        bodyR1.setTextureSize(320, 320);
        bodyR1.mirror = true;
        setRotation(bodyR1, 0F, 0F, 0F);
        inside = new ModelRenderer(this, 138, 240);
        inside.addBox(-20F, -11F, 4F, 40, 25, 1);
        inside.setRotationPoint(0F, 0F, 0F);
        inside.setTextureSize(320, 320);
        inside.mirror = true;
        setRotation(inside, 0F, 0F, 0F);
        catLBT = new ModelRenderer(this, 31, 79);
        catLBT.addBox(13.1F, 31.5F, 17.8F, 8, 8, 5);
        catLBT.setRotationPoint(0F, 0F, 0F);
        catLBT.setTextureSize(320, 320);
        catLBT.mirror = true;
        setRotation(catLBT, 0.7853982F, 0F, 0F);
        catLBM = new ModelRenderer(this, 0, 87);
        catLBM.addBox(13F, 12F, 38F, 8, 5, 6);
        catLBM.setRotationPoint(0F, 0F, 0F);
        catLBM.setTextureSize(320, 320);
        catLBM.mirror = true;
        setRotation(catLBM, 0F, 0F, 0F);
        catLBB = new ModelRenderer(this, 0, 100);
        catLBB.addBox(12.9F, -18.4F, 38.1F, 8, 8, 5);
        catLBB.setRotationPoint(0F, 0F, 0F);
        catLBB.setTextureSize(320, 320);
        catLBB.mirror = true;
        setRotation(catLBB, -0.7853982F, 0F, 0F);
        catRBT = new ModelRenderer(this, 31, 160);
        catRBT.addBox(-21.1F, 31.5F, 17.8F, 8, 8, 5);
        catRBT.setRotationPoint(0F, 0F, 0F);
        catRBT.setTextureSize(320, 320);
        catRBT.mirror = true;
        setRotation(catRBT, 0.7853982F, 0F, 0F);
        catRBM = new ModelRenderer(this, 0, 168);
        catRBM.addBox(-21F, 12F, 38F, 8, 5, 6);
        catRBM.setRotationPoint(0F, 0F, 0F);
        catRBM.setTextureSize(320, 320);
        catRBM.mirror = true;
        setRotation(catRBM, 0F, 0F, 0F);
        catRBB = new ModelRenderer(this, 0, 180);
        catRBB.addBox(-20.9F, -18.4F, 38.1F, 8, 8, 5);
        catRBB.setRotationPoint(0F, 0F, 0F);
        catRBB.setTextureSize(320, 320);
        catRBB.mirror = true;
        setRotation(catRBB, -0.7853982F, 0F, 0F);
        backL = new ModelRenderer(this, 120, 0);
        backL.addBox(13F, -11F, 38F, 7, 19, 1);
        backL.setRotationPoint(0F, 0F, 0F);
        backL.setTextureSize(320, 320);
        backL.mirror = true;
        setRotation(backL, 0F, 0F, 0F);
        backR = new ModelRenderer(this, 120, 21);
        backR.addBox(-20F, -11F, 38F, 7, 19, 1);
        backR.setRotationPoint(0F, 0F, 0F);
        backR.setTextureSize(320, 320);
        backR.mirror = true;
        setRotation(backR, 0F, 0F, 0F);
        door = new ModelRenderer(this, 0, 0);
        door.addBox(-13F, -25F, 0F, 26, 26, 2);
        door.setRotationPoint(0F, 14F, 38F);
        door.setTextureSize(320, 320);
        door.mirror = true;
        setRotation(door, 0F, 0F, 0F);
        box1 = new ModelRenderer(this, 140, 90);
        box1.addBox(1F, 4F, 5F, 10, 10, 16);
        box1.setRotationPoint(0F, 0F, 0F);
        box1.setTextureSize(320, 320);
        box1.mirror = true;
        setRotation(box1, 0F, 0F, 0F);
        box2 = new ModelRenderer(this, 140, 90);
        box2.addBox(-11F, 4F, 5F, 10, 10, 16);
        box2.setRotationPoint(0F, 0F, 0F);
        box2.setTextureSize(320, 320);
        box2.mirror = true;
        setRotation(box2, 0F, 0F, 0F);
        box3 = new ModelRenderer(this, 140, 90);
        box3.addBox(-13F, 4F, 21F, 10, 10, 16);
        box3.setRotationPoint(0F, 0F, 0F);
        box3.setTextureSize(320, 320);
        box3.mirror = true;
        setRotation(box3, 0F, 0F, 0F);
        box4 = new ModelRenderer(this, 140, 90);
        box4.addBox(0F, 4F, 21F, 10, 10, 16);
        box4.setRotationPoint(0F, 0F, 0F);
        box4.setTextureSize(320, 320);
        box4.mirror = true;
        setRotation(box4, 0F, 0F, 0F);
        box5 = new ModelRenderer(this, 140, 90);
        box5.addBox(-15F, -6F, -5F, 10, 10, 16);
        box5.setRotationPoint(0F, 0F, 0F);
        box5.setTextureSize(320, 320);
        box5.mirror = true;
        setRotation(box5, 0F, 1.570796F, 0F);
        box6 = new ModelRenderer(this, 140, 90);
        box6.addBox(-26F, -6F, -14F, 10, 10, 16);
        box6.setRotationPoint(0F, 0F, 0F);
        box6.setTextureSize(320, 320);
        box6.mirror = true;
        setRotation(box6, 0F, 1.570796F, 0F);
        squirt1 = new ModelRenderer(this, 49, 53);
        squirt1.addBox(17F, -4F, 24F, 3, 8, 3);
        squirt1.setRotationPoint(0F, 0F, 0F);
        squirt1.setTextureSize(320, 320);
        squirt1.mirror = true;
        setRotation(squirt1, 0F, 0F, 0F);
        squirt2 = new ModelRenderer(this, 37, 53);
        squirt2.addBox(18F, -6F, 25F, 1, 5, 3);
        squirt2.setRotationPoint(0F, 0F, 0F);
        squirt2.setTextureSize(320, 320);
        squirt2.mirror = true;
        setRotation(squirt2, 0F, 0F, 0F);
        hatch1 = new ModelRenderer(this, 0, 50);
        hatch1.addBox(-6F, -14F, -6F, 12, 2, 12);
        hatch1.setRotationPoint(0F, 0F, 0F);
        hatch1.setTextureSize(320, 320);
        hatch1.mirror = true;
        setRotation(hatch1, 0F, 0F, 0F);
        hatch2 = new ModelRenderer(this, 0, 38);
        hatch2.addBox(-5F, -1F, -11F, 10, 1, 11);
        hatch2.setRotationPoint(0F, -14F, 6F);
        hatch2.setTextureSize(320, 320);
        hatch2.mirror = true;
        setRotation(hatch2, -1.675516F, 0F, 0F);
        hatch3 = new ModelRenderer(this, 0, 55);
        hatch3.addBox(-1F, -15F, 6F, 2, 3, 2);
        hatch3.setRotationPoint(0F, 0F, 0F);
        hatch3.setTextureSize(320, 320);
        hatch3.mirror = true;
        setRotation(hatch3, 0F, 0F, 0F);
        hatch4 = new ModelRenderer(this, 123, 52);
        hatch4.addBox(10F, -13F, -15F, 10, 1, 10);
        hatch4.setRotationPoint(0F, 0F, 0F);
        hatch4.setTextureSize(320, 320);
        hatch4.mirror = true;
        setRotation(hatch4, 0F, 0F, 0F);
        top1 = new ModelRenderer(this, 0, 240);
        top1.addBox(-21F, -12F, -17F, 42, 1, 26);
        top1.setRotationPoint(0F, 0F, 0F);
        top1.setTextureSize(320, 320);
        top1.mirror = true;
        setRotation(top1, 0F, 0F, 0F);
        top2 = new ModelRenderer(this, 80, 159);
        top2.addBox(-21F, -12F, 9F, 11, 1, 29);
        top2.setRotationPoint(0F, 0F, 0F);
        top2.setTextureSize(320, 320);
        top2.mirror = true;
        setRotation(top2, 0F, 0F, 0F);
        top3 = new ModelRenderer(this, 80, 191);
        top3.addBox(10F, -12F, 9F, 11, 1, 29);
        top3.setRotationPoint(0F, 0F, 0F);
        top3.setTextureSize(320, 320);
        top3.mirror = true;
        setRotation(top3, 0F, 0F, 0F);
        top4 = new ModelRenderer(this, 133, 165);
        top4.addBox(-10F, -12F, 25F, 20, 1, 13);
        top4.setRotationPoint(0F, 0F, 0F);
        top4.setTextureSize(320, 320);
        top4.mirror = true;
        setRotation(top4, 0F, 0F, 0F);
        topdoor = new ModelRenderer(this, 135, 192);
        topdoor.addBox(-10F, 0F, -16F, 20, 1, 16);
        topdoor.setRotationPoint(0F, -12F, 25F);
        topdoor.setTextureSize(320, 320);
        topdoor.mirror = true;
        setRotation(topdoor, 0F, 0F, 0F);
        hatchgun1 = new ModelRenderer(this, 30, 174);
        hatchgun1.addBox(-1F, -4F, -7F, 2, 5, 1);
        hatchgun1.setRotationPoint(0F, -13F, 0F);
        hatchgun1.setTextureSize(320, 320);
        hatchgun1.mirror = true;
        setRotation(hatchgun1, 0F, 0F, 0F);
        hatchgun2 = new ModelRenderer(this, 37, 174);
        hatchgun2.addBox(-1F, -4F, -10F, 2, 1, 3);
        hatchgun2.setRotationPoint(0F, -13F, 0F);
        hatchgun2.setTextureSize(320, 320);
        hatchgun2.mirror = true;
        setRotation(hatchgun2, 0F, 0F, 0F);
        hatchgun3 = new ModelRenderer(this, 28, 179);
        hatchgun3.addBox(-2F, -8F, -16F, 4, 4, 11);
        hatchgun3.setRotationPoint(0F, -13F, 0F);
        hatchgun3.setTextureSize(320, 320);
        hatchgun3.mirror = true;
        setRotation(hatchgun3, 0F, 0F, 0F);
        hatchgun4 = new ModelRenderer(this, 29, 205);
        hatchgun4.addBox(-0.5F, -7.8F, -31F, 1, 1, 15);
        hatchgun4.setRotationPoint(0F, -13F, 0F);
        hatchgun4.setTextureSize(320, 320);
        hatchgun4.mirror = true;
        setRotation(hatchgun4, 0F, 0F, 0F);
        hatchgun5 = new ModelRenderer(this, 47, 205);
        hatchgun5.addBox(2F, -7.5F, -15F, 4, 3, 3);
        hatchgun5.setRotationPoint(0F, -13F, 0F);
        hatchgun5.setTextureSize(320, 320);
        hatchgun5.mirror = true;
        setRotation(hatchgun5, 0F, 0F, 0F);
        hatchgun6 = new ModelRenderer(this, 33, 195);
        hatchgun6.addBox(-1F, -8F, -22F, 2, 2, 6);
        hatchgun6.setRotationPoint(0F, -13F, 0F);
        hatchgun6.setTextureSize(320, 320);
        hatchgun6.mirror = true;
        setRotation(hatchgun6, 0F, 0F, 0F);
        Tom_body = new ModelRenderer(this, 138, 18);
        Tom_body.addBox(-4F, -9F, -2F, 8, 8, 4);
        Tom_body.setRotationPoint(0F, -13F, 0F);
        Tom_body.setTextureSize(320, 320);
        Tom_body.mirror = true;
        setRotation(Tom_body, 0F, 0F, 0F);
        Tom_head = new ModelRenderer(this, 137, 0);
        Tom_head.addBox(-4F, -17F, -4F, 8, 8, 8);
        Tom_head.setRotationPoint(0F, -13F, 0F);
        Tom_head.setTextureSize(320, 320);
        Tom_head.mirror = true;
        setRotation(Tom_head, 0F, 0F, 0F);
        Tom_armR = new ModelRenderer(this, 138, 31);
        Tom_armR.addBox(-8F, -9F, -10F, 4, 4, 12);
        Tom_armR.setRotationPoint(0F, -13F, 0F);
        Tom_armR.setTextureSize(320, 320);
        Tom_armR.mirror = true;
        setRotation(Tom_armR, 0F, 0F, 0F);
        Tom_armL = new ModelRenderer(this, 138, 31);
        Tom_armL.addBox(4F, -9F, -10F, 4, 4, 12);
        Tom_armL.setRotationPoint(0F, -13F, 0F);
        Tom_armL.setTextureSize(320, 320);
        Tom_armL.mirror = true;
        setRotation(Tom_armL, 0F, 0F, 0F);
        LightL1 = new ModelRenderer(this, 32, 110);
        LightL1.addBox(15F, -11F, -21F, 2, 2, 2);
        LightL1.setRotationPoint(0F, 0F, 0F);
        LightL1.setTextureSize(320, 320);
        LightL1.mirror = true;
        setRotation(LightL1, 0F, 0F, 0F);
        LightR1 = new ModelRenderer(this, 32, 115);
        LightR1.addBox(-17F, -11F, -21F, 2, 2, 2);
        LightR1.setRotationPoint(0F, 0F, 0F);
        LightR1.setTextureSize(320, 320);
        LightR1.mirror = true;
        setRotation(LightR1, 0F, 0F, 0F);
        LightR2 = new ModelRenderer(this, 41, 115);
        LightR2.addBox(-20F, -11F, -21F, 2, 2, 2);
        LightR2.setRotationPoint(0F, 0F, 0F);
        LightR2.setTextureSize(320, 320);
        LightR2.mirror = true;
        setRotation(LightR2, 0F, 0F, 0F);
        LightL2 = new ModelRenderer(this, 41, 110);
        LightL2.addBox(18F, -11F, -21F, 2, 2, 2);
        LightL2.setRotationPoint(0F, 0F, 0F);
        LightL2.setTextureSize(320, 320);
        LightL2.mirror = true;
        setRotation(LightL2, 0F, 0F, 0F);
        LightRB = new ModelRenderer(this, 40, 120);
        LightRB.addBox(-19F, -10F, 39F, 2, 2, 1);
        LightRB.setRotationPoint(0F, 0F, 0F);
        LightRB.setTextureSize(320, 320);
        LightRB.mirror = true;
        setRotation(LightRB, 0F, 0F, 0F);
        LightLB = new ModelRenderer(this, 33, 120);
        LightLB.addBox(17F, -10F, 39F, 2, 2, 1);
        LightLB.setRotationPoint(0F, 0F, 0F);
        LightLB.setTextureSize(320, 320);
        LightLB.mirror = true;
        setRotation(LightLB, 0F, 0F, 0F);
        skirtL = new ModelRenderer(this, 141, 164);
        skirtL.addBox(20.5F, 5F, -30.8F, 1, 6, 68);
        skirtL.setRotationPoint(0F, 0F, 0F);
        skirtL.setTextureSize(320, 320);
        skirtL.mirror = true;
        setRotation(skirtL, 0F, 0F, 0F);
        skirtR = new ModelRenderer(this, 141, 164);
        skirtR.addBox(-21.5F, 5F, -30.8F, 1, 6, 68);
        skirtR.setRotationPoint(0F, 0F, 0F);
        skirtR.setTextureSize(320, 320);
        skirtR.mirror = true;
        setRotation(skirtR, 0F, 0F, 0F);
        extra_wheelLF = new ModelRenderer(this, 170, 0);
        extra_wheelLF.addBox(12.8F, 15F, -24F, 1, 7, 12);
        extra_wheelLF.setRotationPoint(0F, 0F, 0F);
        extra_wheelLF.setTextureSize(320, 320);
        extra_wheelLF.mirror = true;
        setRotation(extra_wheelLF, 0F, 0F, 0F);
        extra_wheelRB = new ModelRenderer(this, 170, 0);
        extra_wheelRB.addBox(-13.8F, 15F, 26F, 1, 7, 12);
        extra_wheelRB.setRotationPoint(0F, 0F, 0F);
        extra_wheelRB.setTextureSize(320, 320);
        extra_wheelRB.mirror = true;
        setRotation(extra_wheelRB, 0F, 0F, 0F);
        extra_wheelLB = new ModelRenderer(this, 170, 0);
        extra_wheelLB.addBox(12.8F, 15F, 26F, 1, 7, 12);
        extra_wheelLB.setRotationPoint(0F, 0F, 0F);
        extra_wheelLB.setTextureSize(320, 320);
        extra_wheelLB.mirror = true;
        setRotation(extra_wheelLB, 0F, 0F, 0F);
        extra_wheelRF = new ModelRenderer(this, 170, 0);
        extra_wheelRF.addBox(-13.8F, 15F, -24F, 1, 7, 12);
        extra_wheelRF.setRotationPoint(0F, 0F, 0F);
        extra_wheelRF.setTextureSize(320, 320);
        extra_wheelRF.mirror = true;
        setRotation(extra_wheelRF, 0F, 0F, 0F);
    }

    public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
    {

        if(entity instanceof ITank && entity instanceof GVCEntityAPC) {
            TankBaseLogicLogic baseLogic = (TankBaseLogicLogic) ((ITank) entity).getBaseLogic();
            setRotationAngles(f, f1, f2, f3, f4, f5, entity);
            GL11.glTranslatef(0.0F, -(-24.0F * f5 - 0.0078125F), 0.0F);
            GL11.glRotatef(baseLogic.bodyrotationPitch, 1.0F, 0.0F, 0.0F);
            GL11.glRotatef(-baseLogic.bodyrotationRoll, 0.0F, 0.0F, 1.0F);
            GL11.glTranslatef(0.0F, -24.0F * f5 - 0.0078125F, 0.0F);
            f5 = 0.05f;
            super.render(entity, f, f1, f2, f3, f4, f5);
            setRotationAngles(f, f1, f2, f3, f4, f5);
            bodyL.render(f5);
            bodyR.render(f5);
            face1M.render(f5);
            face1M2.render(f5);
            face2.render(f5);
            bottom.render(f5);
            supL1.render(f5);
            supL2.render(f5);
            supL3.render(f5);
            supR1.render(f5);
            supR2.render(f5);
            suoR3.render(f5);
            catML.render(f5);
            cat_FL.render(f5);
            cat_FR.render(f5);
            cat_MR.render(f5);
            face1L1.render(f5);
            face1R1.render(f5);
            bodyL1.render(f5);
            bodyR1.render(f5);
            inside.render(f5);
            catLBT.render(f5);
            catLBM.render(f5);
            catLBB.render(f5);
            catRBT.render(f5);
            catRBM.render(f5);
            catRBB.render(f5);
            backL.render(f5);
            backR.render(f5);
            {
                GL11.glPushMatrix();
                GL11.glTranslatef(0, 0.75f, 1.9f);
                GL11.glRotatef(-((GVCEntityAPC) entity).hatchprogress * 6, 1.0F, 0.0F, 0.0F);
                GL11.glTranslatef(0, -0.75f, -1.9f);
                door.render(f5);
                GL11.glPopMatrix();
            }
            box1.render(f5);
            box2.render(f5);
            box3.render(f5);
            box4.render(f5);
            box5.render(f5);
            box6.render(f5);
            squirt1.render(f5);
            squirt2.render(f5);
            hatch1.render(f5);
            hatch2.render(f5);
            hatch3.render(f5);
            hatch4.render(f5);
            top1.render(f5);
            top2.render(f5);
            top3.render(f5);
            top4.render(f5);
            topdoor.render(f5);
            hatchgun1.render(f5);
            hatchgun2.render(f5);
            {
                GL11.glPushMatrix();
                GL11.glTranslatef(0, -0.85f, -0.35f);
                GL11.glRotatef((baseLogic.turretrotationYaw * smooth + baseLogic.prevturretrotationYaw * (1- smooth)), 0.0F, 1.0F, 0.0F);
                GL11.glRotatef(baseLogic.turretrotationPitch, 1.0F, 0.0F, 0.0F);
                GL11.glTranslatef(0, 0.85f, 0.35f);
                hatchgun3.render(f5);
                hatchgun4.render(f5);
                hatchgun5.render(f5);
                hatchgun6.render(f5);
                GL11.glPopMatrix();
            }
            Tom_body.render(f5);
            Tom_head.render(f5);
            Tom_armR.render(f5);
            Tom_armL.render(f5);
            LightL1.render(f5);
            LightR1.render(f5);
            LightR2.render(f5);
            LightL2.render(f5);
            LightRB.render(f5);
            LightLB.render(f5);
            skirtL.render(f5);
            skirtR.render(f5);
            extra_wheelLF.render(f5);
            extra_wheelRB.render(f5);
            extra_wheelLB.render(f5);
            extra_wheelRF.render(f5);

        }
    }

    private void setRotation(ModelRenderer model, float x, float y, float z)
    {
        model.rotateAngleX = x;
        model.rotateAngleY = y;
        model.rotateAngleZ = z;
    }

    public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5)
    {
        //super.setRotationAngles(f, f1, f2, f3, f4, f5);
    }

}
